import React from 'react';
import { useRouter } from 'next/router';
import BlogStyle from '../../../styles/Blog.module.scss'
import { getCategories, getCategoryPost } from "../../../services"
import { PostCard,PostWidget, Categories, Loader,BlogHeader } from '../../../components';
import Head from 'next/head';
import {motion}  from 'framer-motion'

const variants = {
  hidden:{opacity: 0, x:0, y:20},
  enter:{opacity:1, x:0, y:0},
  exit:{opacity:0,x:0,y:20}
}

const CategoryPost = ({ posts }) => {
  const router = useRouter();
  // const mainCategory = posts[0].node.categories[0].name
  const mainCategory = "Category"
  if (router.isFallback) {
    return <Loader />;
  }

  return (
    <motion.div initial="hidden" animate="enter" exit="exit" variants={variants} transition={{duration: 0.2, type: 'easeInOut'>
    <Head>
        <title>Ariadne Blog | {mainCategory? mainCategory:""}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <link rel="icon" href="https://www.munich-startup.de/wp-content/uploads/2020/10/Ariadne-Maps-GmbH.jpeg" />
       </Head>
    <BlogHeader/>
    <div className={BlogStyle.blogBody}>
        <div className="container mx-auto px-10 mb-8">
      <div className="grid grid-cols-1 lg:grid-cols-12 gap-12">
        <div className="col-span-1 lg:col-span-8">
          {posts.map((post, index) => (
            <PostCard key={index} post={post.node} />
          ))}
        </div>
        <div className="col-span-1 lg:col-span-4">
          <div className="relative lg:sticky top-8">
          <PostWidget />
            <Categories />
          </div>
        </div>
      </div>
    </div>
    </div>
    </motion.div>
  );
};
export default CategoryPost;

// Fetch data at build time
export async function getStaticProps({ params }) {
  const posts = await getCategoryPost(params.slug);

  return {
    props: { posts },
  };
}

// Specify dynamic routes to pre-render pages based on data.
// The HTML is generated at build time and will be reused on each request.
export async function getStaticPaths() {
  const categories = await getCategories();
  return {
    paths: categories.map(({ slug }) => ({ params: { slug } })),
    fallback: true,
  };
}